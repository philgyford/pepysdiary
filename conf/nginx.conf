# Should be symlinked to /etc/nginx/sites-available/pepys
# Then /etc/nginx/sites-enabled/pepys should point to that


upstream pepys_app_server {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response (in case the Unicorn master nukes a
  # single worker for timing out).

  server unix:/webapps/pepys/run/gunicorn.sock fail_timeout=0;
}


include snippets/00-mythic-tag-bots.conf;
include snippets/00-mythic-tag-tools.conf;

# Redirect http://pepysdiary.com to https://www.pepysdiary.com
server {
  listen 80;
  listen [::]:80;
  server_name pepysdiary.com;
  include snippets/acme-challenge.conf;
  location / {
    return 301 https://www.pepysdiary.com$request_uri;
  }
}


# Redirect http://www.pepysdiary.com to https://www.pepysdiary.com
server {
  listen 80;
  listen [::]:80;
  server_name www.pepysdiary.com;
  include snippets/acme-challenge.conf;
  location / {
    return 301 https://www.pepysdiary.com$request_uri;
  }
}


# Redirect https://pepysdiary.com to https://www.pepysdiary.com
server {
  listen 443 ssl;
  listen [::]:443 ssl;
  server_name pepysdiary.com;

  include snippets/01-mythic-bad-bot.conf;
  include snippets/01-mythic-bad-tool.conf;

  ssl_certificate /var/lib/dehydrated/certs/pepysdiary.com/fullchain.pem;
  ssl_certificate_key /var/lib/dehydrated/certs/pepysdiary.com/privkey.pem;
  ssl_protocols TLSv1.2 TLSv1.3;
  # Read more at http://nginx.org/en/docs/http/configuring_https_servers.html
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:50m;
  return 301 https://www.pepysdiary.com$request_uri;
}



server {
  listen 443 ssl;
  listen [::]:443 ssl;
  server_name www.pepysdiary.com;

  include snippets/01-mythic-bad-bot.conf;
  include snippets/01-mythic-bad-tool.conf;

  if ($http_host !~* ^(www.pepysdiary.com)$ ) {
    # Return 444 and close connection if no Host header present
    return 444;
  }

  ssl_certificate /var/lib/dehydrated/certs/pepysdiary.com/fullchain.pem;
  ssl_certificate_key /var/lib/dehydrated/certs/pepysdiary.com/privkey.pem;
  ssl_protocols TLSv1.2 TLSv1.3;
  # Read more at http://nginx.org/en/docs/http/configuring_https_servers.html
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:50m;

  access_log /webapps/pepys/logs/nginx-access.log;
  error_log /webapps/pepys/logs/nginx-error.log;

  rewrite ^/favicon.ico$ /static/common/img/favicons/favicon.ico last;

  charset utf-8;

  # Max upload size
  client_max_body_size 10M;

  location /static/ {
    alias /webapps/pepys/code/pepysdiary/static_collected/;
  }

  # location /media/ {
  #  alias /webapps/pepys/code/pepysdiary/media/;
  # }

  location / {
    # http://en.wikipedia.org/wiki/X-Forwarded-For
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # helps set the proper protocol for doing redirects with https:
    proxy_set_header X-Forwarded-Proto https;

    # pass the Host: header from the client right along so redirects
    # can be set properly
    proxy_set_header Host $http_host;

    # we don't want nginx trying to do something clever with
    # redirects, we set the Host: header above already.
    proxy_redirect off;


    # NOT SURE IF WE NEED THIS:

    # Try to serve static files from nginx, no point in making an
    # *application* server like Unicorn/Rainbows! serve static files.
    # if (!-f $request_filename) {
    #   proxy_pass http://pepys_app_server;
    #   break;
    # }

    # CAN WE JUST USE THIS?

    proxy_pass http://pepys_app_server;
  }

  # Error pages
  error_page 500 502 503 504 /500.html;
  location = /500.html {
    root /webapps/pepys/code/pepysdiary/templates/;
  }
}
